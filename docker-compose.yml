version: '2.1'

services:
  product-postgresql:
    image: postgres:latest
    mem_limit: 512m
    environment:
      POSTGRES_DB: product-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pwd
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  recommendation-postgresql:
    image: postgres:latest
    mem_limit: 512m
    environment:
      POSTGRES_DB: recommendation-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pwd
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  review-postgresql:
    image: postgres:latest
    mem_limit: 512m
    environment:
      POSTGRES_DB: review-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pwd
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  product:
    build: microservices/product-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      product-postgresql:
        condition: service_healthy

  recommendation:
    build: microservices/recommendation-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      recommendation-postgresql:
        condition: service_healthy

  review:
    build: microservices/review-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      review-postgresql:
        condition: service_healthy

  product-composite:
    build: microservices/product-composite-service
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

